name: Deploy to Docker HUB and EKS
on:

  push:
    branches: [ main ]

env:
  EKS_CLUSTER_NAME: MyEKSCluster
  AWS_REGION: us-east-1

jobs:

  build:

    name: Deployment
    runs-on: ubuntu-latest

    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon Docker hub
        env:
          DOCKER_HUB: luongnv1810
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t luongnv1810/reverseproxy:latest -f ./udagram-reverseproxy/Dockerfile ./udagram-reverseproxy
          docker push luongnv1810/reverseproxy:latest
          
          docker build -t luongnv1810/udagram-api-feed:latest -f ./udagram-api-feed/Dockerfile ./udagram-api-feed
          docker push luongnv1810/udagram-api-feed:latest
          
          docker build -t luongnv1810/udagram-api-user:latest -f ./udagram-api-user/Dockerfile ./udagram-api-user
          docker push luongnv1810/udagram-api-user:latest
          
          docker build -t luongnv1810/udagram-frontend:latest -f ./udagram-frontend/Dockerfile ./udagram-frontend
          docker push luongnv1810/udagram-frontend:latest

#      - name: Update kube config
#        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
#
#      - name: Deploy to EKS
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ steps.commit.outputs.short }}
#        run: |
#          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
#          kubectl apply -f manifests/hello-app-deployment.yaml
#          kubectl apply -f manifests/hello-app-service.yaml